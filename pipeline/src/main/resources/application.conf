akka {
  //extensions = ["kamon.statsd.StatsD"]

  actor {
    // This changes to remote provider in akka 2.4
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    //log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "is69.idb.cs.tu-bs.de"
      port = 4203
      //maximum-frame-size = 1024000b
    }
  }
}

elementary {
  statistics.address = "akka.tcp://StatisticSystem@is61.idb.cs.tu-bs.de:4202/user/remote"
  api.address = "akka.tcp://ApiSystem@is61.idb.cs.tu-bs.de:4201/user/frontend"

  parameter {
    general {
      dsm-folder = "/etc/elementary/data/"
      ds-model   = "doc2vec_en-wiki-sze_200-wnd_10-mc_5-wrks_26-negative_1-dm_1-smpl_1e-05-dbow_0.sav"
      stopwords  = "/home/elementary/data/stopwords.txt"
    }
    extraction {
      mode            = "passing"
      extend-fulltext = false
      focus-word      = false
    }
    candidates {
      mode       = "baseline"
      focus-word = false
      bow        = true
    }
    ranking {
      mode       = "passing"
    }
    answer {
      threshold  = 0.4
    }
  }

  machinelearning.word2vec {
    doc2vec_python = "/etc/elementary/scripts/doc2vec_exec.py"
  }

  pipeline {
    source-buffer = 100
    answer-time = 600
    min-ranking = 0.8
  }

  util {
    logging.max-repeat = 3
    cluster {
      master-critical = 20
      master-address = "akka.tcp://ApiSystem@is61.idb.cs.tu-bs.de:4201/user/frontend"
    }

    data {
      elasticsearch {
        address = "elasticsearch://is62.idb.cs.tu-bs.de:9300"
      }
      virtuoso {
        endpoint = "http://is62.idb.cs.tu-bs.de:8899/sparql"
      }
    }
  }
}

kamon {
  statsd {
    // Our StatsD target host and port
    hostname = "http://is62.idb.cs.tu-bs.de"
    port = 8125

    simple-metric-key-generator {
      // Application prefix for all metrics pushed to StatsD
      application = "pipeline"
    }
  }

  metrics {
    filters = [
    {
      actor {
        includes = [ "*" ],
        excludes = [ "system/*" ]
      }
    },
    {
      trace {
        includes = [ "*" ]
        excludes = []
      }
    }]
  }
}
